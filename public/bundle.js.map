{"version":3,"sources":["app.js"],"names":["socket","io","messages","document","querySelector","Qs","parse","location","search","ignoreQueryPrefix","username","emit","on","data","forEach","chat","createChatEl","textContent","color","split","includes","el","insertAdjacentHTML","scrollTop","scrollHeight","getElementById","addEventListener","e","preventDefault","msg","target","elements","text","value","length","focus","me","iAm","side","name","time"],"mappings":";AAAA,IAAMA,EAASC,KACTC,EAAWC,SAASC,cAAc,aACnBC,EAAAA,GAAGC,MAAMC,SAASC,OAAQ,CAC3CC,mBAAmB,IADfC,EAAAA,EAAAA,SAGRV,EAAOW,KAAK,OAAQD,GAEpBV,EAAOY,GAAG,cAAe,SAACC,GACtBA,EAAKC,QAAQ,SAACC,GACVC,EAAaD,OAIrBf,EAAOY,GAAG,YAAa,SAACC,GACpBV,SAASC,cAAc,YAAYa,YAAcJ,IAGrDb,EAAOY,GAAG,UAAW,SAACC,GACdK,IAAAA,EAAJ,4BACIL,EAAKM,MAAM,KAAKC,SAAS,UAASF,EAAA,8BAChCG,IAAAA,EAC4CH,qFAAAA,OAAAA,EAAWL,OAAAA,OAAAA,EAD7D,kBAGAX,EAASoB,mBAAmB,YAAaD,GACzCnB,EAASqB,UAAYrB,EAASsB,eAGlCxB,EAAOY,GAAG,UAAW,SAACC,GAClBG,EAAaH,KAGjBV,SAASsB,eAAe,QAAQC,iBAAiB,SAAU,SAACC,GACxDA,EAAEC,iBACIC,IAAAA,EAAMF,EAAEG,OAAOC,SAASC,KAAKC,MAChB,IAAfJ,EAAIK,SACRlC,EAAOW,KAAK,cAAe,CAAEkB,IAAAA,EAAKnB,SAAAA,GAAY,cAC9CiB,EAAEG,OAAOC,SAASC,KAAKC,MAAQ,GAC/BN,EAAEG,OAAOC,SAASC,KAAKG,WAG3B,IAAMnB,EAAe,SAACH,GACduB,IAAAA,EAAK,CAAEC,IAAK,KAAMC,KAAM,QAASC,MAAM,GACvC1B,EAAKH,WAAaA,IAAU0B,EAAK,CAAEC,IAAK,OAAQC,KAAM,OAAQC,MAAM,IAClElB,IAAAA,EAA4Be,uBAAAA,OAAAA,EAAGE,KACfF,gCAAAA,OAAAA,EAAGE,KAAcF,WAAAA,OAAAA,EAAGG,KAAO1B,EAAKH,SAAW,GACtC0B,yCAAAA,OAAAA,EAAGC,IAAQxB,MAAAA,OAAAA,EAAKgB,IACvBO,kCAAAA,OAAAA,EAAGE,KAAwBzB,qBAAAA,OAAAA,EAAK2B,KAHpD,oBAKAtC,EAASoB,mBAAmB,YAAaD,GACzCnB,EAASqB,UAAYrB,EAASsB","file":"bundle.js","sourceRoot":"","sourcesContent":["const socket = io();\r\nconst messages = document.querySelector('.messages');\r\nconst { username } = Qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n});\r\nsocket.emit('join', username);\r\n\r\nsocket.on('oldMessages', (data) => {\r\n    data.forEach((chat) => {\r\n        createChatEl(chat);\r\n    });\r\n});\r\n\r\nsocket.on('liveUsers', (data) => {\r\n    document.querySelector('.noUsers').textContent = data;\r\n});\r\n\r\nsocket.on('welcome', (data) => {\r\n    let color = `rgba(73, 241, 177, 0.377)`;\r\n    if (data.split(' ').includes('left')) color = `rgba(255, 141, 175, 0.377)`;\r\n    const el = `<div class=\"message center\">\r\n    <div class=\"message_text bot\" style=\"background:${color};\">${data}</div>\r\n</div>`;\r\n    messages.insertAdjacentHTML('beforeend', el);\r\n    messages.scrollTop = messages.scrollHeight;\r\n});\r\n\r\nsocket.on('message', (data) => {\r\n    createChatEl(data);\r\n});\r\n\r\ndocument.getElementById('form').addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const msg = e.target.elements.text.value;\r\n    if (msg.length === 0) return;\r\n    socket.emit('sentMessage', { msg, username }, () => {});\r\n    e.target.elements.text.value = '';\r\n    e.target.elements.text.focus();\r\n});\r\n\r\nconst createChatEl = (data) => {\r\n    let me = { iAm: 'me', side: 'right', name: false };\r\n    if (data.username !== username) me = { iAm: 'else', side: 'left', name: true };\r\n    const el = `<div class=\"message ${me.side}\">\r\n    <div class=\"message ${me.side} user\">${me.name ? data.username : ''}</div>\r\n    <div class=\"message_text ${me.iAm}\">${data.msg}</div>\r\n    <p class=\"message ${me.side} time\">Sent &nbsp${data.time}</p>\r\n    </div>`;\r\n    messages.insertAdjacentHTML('beforeend', el);\r\n    messages.scrollTop = messages.scrollHeight;\r\n};\r\n"]}